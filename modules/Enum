local Enum = {}

Enum.Header = {
    SHUTDOWN = "SHDN",
    FETCHGATEREGISTRY = "FGR",
    REGISTERGATE = "RGGT",
    UNREGISTERGATE = "URGT",
    GATEREGISTRYBROADCAST = "GTRB",
    SERVERPING = "SVPG",
    NOTIFICATION = "NOTF",
    KEEPALIVE = "KEAL",
    RUNCOMMAND = "RNCD",
	COMMANDRESPONSE = "CDRES",
    FILETRANSFERDATA = "FTFD",
    FILETRANSFERCOMPLETE = "FTFC",

}

Enum.Header.Gate = {
  GATEDIALLINGOUT   = "GDO",
  GATEDIALLINGIN    = "GDI",
  GATEOPENING       = "GTO",
  GATECLOSING       = "GTC",
  GATECONNECTED     = "GCN",
  DIALGATE          = "DG",
  CLOSEGATE         = "CG",
}

Enum.Port = {}

Enum.Port.General = 6000
Enum.Port.Command = 5000
Enum.Port.CommandResponse = 50001
Enum.Port.FTP = 5002
Enum.Port.Keepalive = 5003
Enum.Port.Stargate = 5006
Enum.Port.StargateResponse = 5007
Enum.Port.Notifications = 5008

-------------------------------------------------------------------------------

Enum.Side = {
  [0] = "bottom",
  [1] = "top",
  [2] = "back",
  [3] = "front",
  [4] = "right",
  [5] = "left",
  [6] = "unknown",

  bottom = 0,
  top = 1,
  back = 2,
  front = 3,
  right = 4,
  left = 5,
  unknown = 6,

  down = 0,
  up = 1,
  north = 2,
  south = 3,
  west = 4,
  east = 5,

  negy = 0,
  posy = 1,
  negz = 2,
  posz = 3,
  negx = 4,
  posx = 5,

  forward = 3
}

local sidesMetatable = getmetatable(Enum.Side) or {}

-- sides[0..5] are mapped to itertable[1..6].
local sidesItertable = {
  Enum.Side[0],
  Enum.Side[1],
  Enum.Side[2],
  Enum.Side[3],
  Enum.Side[4],
  Enum.Side[5]
}

-- Future-proofing against the possible introduction of additional
-- logical sides (e.g. [7] = "all", [8] = "none", etc.).
function sidesMetatable.__len(sides)
  return #sidesItertable
end

-- Allow `sides` to be iterated over like a normal (1-based) array.
function sidesMetatable.__ipairs(sides)
  return ipairs(sidesItertable)
end

setmetatable(Enum.Side, sidesMetatable)

-------------------------------------------------------------------------------



























return Enum
