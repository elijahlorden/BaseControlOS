function loadfile(file, mode, env)
  local handle, reason = filesystem.open(file)
  if not handle then
    error(reason, 2)
  end
  local buffer = ""
  repeat
    local data, reason = filesystem.read(handle)
    if not data and reason then
      error(reason)
    end
    buffer = buffer .. (data or "")
  until not data
  filesystem.close(handle)
  if mode == nil then mode = "bt" end
  if env == nil then env = _G end
  return load(buffer, "=" .. file)
end

function dofile(file)
  local program, reason = loadfile(file)
  if program then
    local result = table.pack(pcall(program))
    if result[1] then
      return table.unpack(result, 2, result.n)
    else
      error(result[2])
    end
  else
    error(reason)
  end
end

event = event_code()
component_code()
text = text_code()
filesystem = fs_code()
fs = filesystem
keyboard = dofile("keyboard.lua")
term = terminal_code()

network = dofile("network")
serialization = dofile("serialization")

event_code, component_code, text_code, fs_code, terminal_code = nil, nil, nil, nil, nil

-- bind GPU

if term.isAvailable() then
  component.gpu.bind(component.screen.address)
  component.gpu.setResolution(component.gpu.getResolution())
  component.gpu.setBackground(0x000000)
  component.gpu.setForeground(0xFFFFFF)
  term.setCursorBlink(true)
  term.clear()
end

network.portInit()
print()
print("LinkedRelay Started")

sendToLinkedCards = function(packet)
	local tunnels = component.list("tunnel", true) or {}
	for a,t in tunnels do
		local tc = component.proxy(a)
		tc.send(packet)
	end
end

while true do
	_, localNetworkCard, remoteAddress, port, distance, inpkt = event.pull("modem_message")
	--print("message on port "..port)
	if (port == 0) then
		local desPkt = serialization.unserialize(inpkt)
		if (not desPkt) then return end
		local sendPort = network.Ports[desPkt.PortName] or network.Ports.General
		component.modem.broadcast(sendPort, inpkt)
		print("Received Linked Message, forwarding to network (Port "..sendPort..")")
	else
		sendToLinkedCards(inpkt)
		print("Received network message on Port "..port..", forwarding to linked card")
	end
end



